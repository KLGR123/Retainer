{
    "GameControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class GameControl : MonoBehaviour {\n\n    public static GameControl instance;\n    public Text scoreText;\n    public Text comboText;\n    public GameObject gameOverText;\n    public bool gameOver = false;\n    public float spawnRate = 2f;\n    public GameObject slowBugPrefab;\n    public GameObject fastBugPrefab;\n    private int score = 0;\n    private int combo = 0;\n    private float timeSinceLastSpawned;\n    private bool bigFootBuffActive = false;\n    private float bigFootBuffDuration = 5f;\n    private float bigFootBuffTimer = 0f;\n\n    void Awake() \n    {\n        if (instance == null)\n        {\n            instance = this;\n        }\n        else if (instance != this)\n        {\n            Destroy(gameObject);\n        }\n        Time.timeScale = 0;\n    }\n\n    void Start()\n    {\n        UpdateScoreText();\n        UpdateComboText();\n    }\n\n    void Update()\n    {\n        if (!gameOver)\n        {\n            timeSinceLastSpawned += Time.deltaTime;\n            if (timeSinceLastSpawned >= spawnRate)\n            {\n                timeSinceLastSpawned = 0;\n                SpawnBug();\n            }\n\n            if (bigFootBuffActive)\n            {\n                bigFootBuffTimer += Time.deltaTime;\n                if (bigFootBuffTimer >= bigFootBuffDuration)\n                {\n                    DeactivateBigFootBuff();\n                }\n            }\n        }\n    }\n\n    public void OnStartGame()\n    {\n        Time.timeScale = 1;\n        gameOver = false;\n        score = 0;\n        combo = 0;\n        UpdateScoreText();\n        UpdateComboText();\n    }\n\n    public void OnGameOver()\n    {\n        gameOver = true;\n        gameOverText.SetActive(true);\n    }\n\n    public void BugSquashed(int points)\n    {\n        if (gameOver)\n        {\n            return;\n        }\n        score += points;\n        combo++;\n        UpdateScoreText();\n        UpdateComboText();\n\n        if (combo >= 10 && !bigFootBuffActive)\n        {\n            ActivateBigFootBuff();\n        }\n    }\n\n    public void ResetCombo()\n    {\n        combo = 0;\n        UpdateComboText();\n    }\n\n    private void UpdateScoreText()\n    {\n        scoreText.text = \"Score: \" + score.ToString();\n    }\n\n    private void UpdateComboText()\n    {\n        comboText.text = \"Combo: \" + combo.ToString();\n    }\n\n    private void SpawnBug()\n    {\n        float spawnYPosition = Random.Range(-3f, 3f); // Adjust Y range based on your scene\n        Vector2 spawnPosition = new Vector2(10f, spawnYPosition); // X position is fixed, Y is random\n\n        float randomValue = Random.value;\n        GameObject bugPrefab = randomValue < 0.7f ? slowBugPrefab : fastBugPrefab;\n\n        Instantiate(bugPrefab, spawnPosition, Quaternion.identity);\n    }\n\n    private void ActivateBigFootBuff()\n    {\n        bigFootBuffActive = true;\n        bigFootBuffTimer = 0f;\n        FootControl.instance.ActivateBigFoot();\n    }\n\n    private void DeactivateBigFootBuff()\n    {\n        bigFootBuffActive = false;\n        FootControl.instance.DeactivateBigFoot();\n    }\n}",
    "FootControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FootControl : MonoBehaviour {\n\n    public static FootControl instance;\n    public float stompSpeed = 5f;\n    public Sprite normalFootSprite;\n    public Sprite bigFootSprite;\n    private Vector2 originalPosition;\n    private bool isStomping = false;\n    private SpriteRenderer spriteRenderer;\n\n    void Awake()\n    {\n        if (instance == null)\n        {\n            instance = this;\n        }\n        else if (instance != this)\n        {\n            Destroy(gameObject);\n        }\n    }\n\n    void Start()\n    {\n        originalPosition = transform.position;\n        spriteRenderer = GetComponent<SpriteRenderer>();\n    }\n\n    void Update()\n    {\n        if (Input.GetMouseButtonDown(0) && !isStomping)\n        {\n            StartCoroutine(Stomp());\n        }\n    }\n\n    private IEnumerator Stomp()\n    {\n        isStomping = true;\n        Vector2 targetPosition = new Vector2(transform.position.x, transform.position.y - 1f);\n\n        while (Vector2.Distance(transform.position, targetPosition) > 0.01f)\n        {\n            transform.position = Vector2.MoveTowards(transform.position, targetPosition, stompSpeed * Time.deltaTime);\n            yield return null;\n        }\n\n        yield return new WaitForSeconds(0.1f);\n\n        while (Vector2.Distance(transform.position, originalPosition) > 0.01f)\n        {\n            transform.position = Vector2.MoveTowards(transform.position, originalPosition, stompSpeed * Time.deltaTime);\n            yield return null;\n        }\n\n        isStomping = false;\n    }\n\n    private void OnTriggerEnter2D(Collider2D other)\n    {\n        BugControl bug = other.GetComponent<BugControl>();\n        if (bug != null)\n        {\n            bug.Squash();\n        }\n    }\n\n    public void ActivateBigFoot()\n    {\n        spriteRenderer.sprite = bigFootSprite;\n        // Optionally increase the collider size\n    }\n\n    public void DeactivateBigFoot()\n    {\n        spriteRenderer.sprite = normalFootSprite;\n        // Optionally reset the collider size\n    }\n}",
    "BugControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BugControl : MonoBehaviour {\n\n    public float speed;\n    public int points;\n    private bool isSquashed = false;\n\n    void Start()\n    {\n        // Randomly set speed and points based on bug type\n        if (gameObject.CompareTag(\"FastBug\"))\n        {\n            speed = Random.Range(3f, 5f);\n            points = 2;\n        }\n        else if (gameObject.CompareTag(\"SlowBug\"))\n        {\n            speed = Random.Range(1f, 2f);\n            points = 1;\n        }\n    }\n\n    void Update()\n    {\n        if (!isSquashed)\n        {\n            transform.Translate(Vector2.left * speed * Time.deltaTime);\n        }\n    }\n\n    public void Squash()\n    {\n        if (!isSquashed)\n        {\n            isSquashed = true;\n            GameControl.instance.BugSquashed(points);\n            StartCoroutine(ShowSplatEffect());\n        }\n    }\n\n    private IEnumerator ShowSplatEffect()\n    {\n        // Show splat effect\n        GameObject splat = Instantiate(Resources.Load(\"Splat\") as GameObject, transform.position, Quaternion.identity);\n        yield return new WaitForSeconds(0.5f);\n        Destroy(splat);\n        Destroy(gameObject);\n    }\n\n    private void OnBecameInvisible()\n    {\n        if (!isSquashed)\n        {\n            GameControl.instance.ResetCombo();\n            Destroy(gameObject);\n        }\n    }\n}",
    "SplatEffect.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SplatEffect : MonoBehaviour {\n\n    public float duration = 0.5f;\n\n    void Start()\n    {\n        StartCoroutine(DestroyAfterTime());\n    }\n\n    private IEnumerator DestroyAfterTime()\n    {\n        yield return new WaitForSeconds(duration);\n        Destroy(gameObject);\n    }\n}",
    "UIControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class UIControl : MonoBehaviour {\n\n    public Text scoreText;\n    public Text comboText;\n    public Text buffText;\n    public GameObject startButton;\n    public GameObject gameOverText;\n\n    void Start()\n    {\n        startButton.SetActive(true);\n        gameOverText.SetActive(false);\n        buffText.gameObject.SetActive(false);\n    }\n\n    public void OnStartButton()\n    {\n        startButton.SetActive(false);\n        gameOverText.SetActive(false);\n        GameControl.instance.OnStartGame();\n    }\n\n    public void UpdateScore(int score)\n    {\n        scoreText.text = \"Score: \" + score.ToString();\n    }\n\n    public void UpdateCombo(int combo)\n    {\n        comboText.text = \"Combo: \" + combo.ToString();\n    }\n\n    public void ShowGameOver()\n    {\n        gameOverText.SetActive(true);\n    }\n\n    public void ShowBuffStatus(bool isActive)\n    {\n        buffText.gameObject.SetActive(isActive);\n        if (isActive)\n        {\n            buffText.text = \"Big Foot Active!\";\n        }\n    }\n}"
}