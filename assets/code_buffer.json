{
    "GameControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class GameControl : MonoBehaviour {\n\n    public static GameControl instance;\n    public Text scoreText;\n    public Text timerText;\n    public GameObject gameOverText;\n    public int score = 0;\n    public float gameTime = 60f; // Total game time in seconds\n    private float timeRemaining;\n    private bool gameOver = false;\n\n    void Awake() \n    {\n        if (instance == null)\n        {\n            instance = this;\n        }\n        else if (instance != this)\n        {\n            Destroy(gameObject);\n        }\n        timeRemaining = gameTime;\n    }\n\n    void Start()\n    {\n        UpdateScoreText();\n        UpdateTimerText();\n    }\n\n    void Update()\n    {\n        if (!gameOver)\n        {\n            timeRemaining -= Time.deltaTime;\n            UpdateTimerText();\n\n            if (timeRemaining <= 0)\n            {\n                EndGame();\n            }\n        }\n    }\n\n    public void MoleHit()\n    {\n        if (!gameOver)\n        {\n            score++;\n            UpdateScoreText();\n        }\n    }\n\n    void UpdateScoreText()\n    {\n        scoreText.text = \"Score: \" + score.ToString();\n    }\n\n    void UpdateTimerText()\n    {\n        timerText.text = \"Time: \" + Mathf.Ceil(timeRemaining).ToString();\n    }\n\n    void EndGame()\n    {\n        gameOver = true;\n        gameOverText.SetActive(true);\n        // Logic to determine if the player advances to the next level or ends the game\n    }\n}",
    "MoleControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class MoleControl : MonoBehaviour {\n\n    public float appearDuration = 1.0f; // Time the mole stays visible\n    public float riseSpeed = 2.0f; // Speed at which the mole rises\n    public float fallSpeed = 2.0f; // Speed at which the mole falls\n    private bool isVisible = false;\n    private Animator animator;\n    private Vector3 initialPosition;\n    private Vector3 targetPosition;\n\n    void Start()\n    {\n        animator = GetComponent<Animator>();\n        initialPosition = transform.position;\n        targetPosition = new Vector3(initialPosition.x, initialPosition.y + 1.0f, initialPosition.z); // Adjust the target position as needed\n        StartCoroutine(MoleBehavior());\n    }\n\n    IEnumerator MoleBehavior()\n    {\n        while (true)\n        {\n            yield return new WaitForSeconds(Random.Range(0.5f, 2.0f)); // Random delay before appearing\n            StartCoroutine(Rise());\n            yield return new WaitForSeconds(appearDuration);\n            if (isVisible) // If not hit, start falling\n            {\n                StartCoroutine(Fall());\n            }\n        }\n    }\n\n    IEnumerator Rise()\n    {\n        isVisible = true;\n        animator.SetTrigger(\"Appear\");\n        while (transform.position.y < targetPosition.y)\n        {\n            transform.position = Vector3.MoveTowards(transform.position, targetPosition, riseSpeed * Time.deltaTime);\n            yield return null;\n        }\n    }\n\n    IEnumerator Fall()\n    {\n        isVisible = false;\n        animator.SetTrigger(\"Disappear\");\n        while (transform.position.y > initialPosition.y)\n        {\n            transform.position = Vector3.MoveTowards(transform.position, initialPosition, fallSpeed * Time.deltaTime);\n            yield return null;\n        }\n    }\n\n    void OnMouseDown()\n    {\n        if (isVisible)\n        {\n            GameControl.instance.MoleHit();\n            StopAllCoroutines();\n            StartCoroutine(Fall());\n        }\n    }\n}",
    "GridManager.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class GridManager : MonoBehaviour {\n\n    public GameObject molePrefab;\n    public int gridRows = 3;\n    public int gridColumns = 3;\n    public float xOffset = 1.5f;\n    public float yOffset = 1.5f;\n\n    private GameObject[,] grid;\n\n    void Start()\n    {\n        grid = new GameObject[gridRows, gridColumns];\n        CreateGrid();\n    }\n\n    void CreateGrid()\n    {\n        for (int i = 0; i < gridRows; i++)\n        {\n            for (int j = 0; j < gridColumns; j++)\n            {\n                Vector3 position = new Vector3(i * xOffset, j * yOffset, 0);\n                grid[i, j] = Instantiate(molePrefab, position, Quaternion.identity);\n                grid[i, j].transform.SetParent(transform);\n            }\n        }\n    }\n}",
    "UIControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class UIControl : MonoBehaviour {\n\n    public Text scoreText;\n    public Text timerText;\n    public GameObject gameOverPanel;\n\n    void Start()\n    {\n        gameOverPanel.SetActive(false);\n    }\n\n    public void UpdateScore(int score)\n    {\n        scoreText.text = \"Score: \" + score.ToString();\n    }\n\n    public void UpdateTimer(float timeRemaining)\n    {\n        timerText.text = \"Time: \" + Mathf.Ceil(timeRemaining).ToString();\n    }\n\n    public void ShowGameOver()\n    {\n        gameOverPanel.SetActive(true);\n    }\n}",
    "AudioManager.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class AudioManager : MonoBehaviour {\n\n    public static AudioManager instance;\n    public AudioClip moleHitSound;\n    public AudioClip gameOverSound;\n    private AudioSource audioSource;\n\n    void Awake()\n    {\n        if (instance == null)\n        {\n            instance = this;\n        }\n        else if (instance != this)\n        {\n            Destroy(gameObject);\n        }\n        audioSource = GetComponent<AudioSource>();\n    }\n\n    public void PlayMoleHitSound()\n    {\n        audioSource.PlayOneShot(moleHitSound);\n    }\n\n    public void PlayGameOverSound()\n    {\n        audioSource.PlayOneShot(gameOverSound);\n    }\n}"
}