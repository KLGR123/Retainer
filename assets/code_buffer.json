{
    "GameControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class GameControl : MonoBehaviour {\n\n    public static GameControl instance;\n    public GameObject gameOverText;\n    public Text scoreText;\n    public float gameDuration = 60f; // Game duration in seconds\n    public bool gameOver = false;\n    private float timeRemaining;\n    private int score = 0;\n\n    void Awake() \n    {\n        if (instance == null)\n        {\n            instance = this;\n        }\n        else if (instance != this)\n        {\n            Destroy(gameObject);\n        }\n        timeRemaining = gameDuration;\n        Time.timeScale = 1;\n    }\n\n    void Update()\n    {\n        if (!gameOver)\n        {\n            timeRemaining -= Time.deltaTime;\n            if (timeRemaining <= 0)\n            {\n                EndGame();\n            }\n        }\n    }\n\n    public void BugSquashed(int points)\n    {\n        if (gameOver)\n        {\n            return;\n        }\n        score += points;\n        scoreText.text = \"Score: \" + score.ToString();\n    }\n\n    private void EndGame()\n    {\n        gameOver = true;\n        gameOverText.SetActive(true);\n        // Additional logic to evaluate player's performance based on score\n    }\n}",
    "FootControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FootControl : MonoBehaviour {\n\n    public GameObject bigFootPrefab;\n    public float stompCooldown = 0.5f;\n    private float lastStompTime;\n    private bool isBigFootActive = false;\n\n    void Update()\n    {\n        if (Input.GetMouseButtonDown(0) && Time.time > lastStompTime + stompCooldown)\n        {\n            Stomp();\n            lastStompTime = Time.time;\n        }\n    }\n\n    void Stomp()\n    {\n        Vector3 stompPosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);\n        stompPosition.z = 0;\n        if (isBigFootActive)\n        {\n            Instantiate(bigFootPrefab, stompPosition, Quaternion.identity);\n        }\n        else\n        {\n            transform.position = stompPosition;\n            // Logic to check for bugs under the foot and squash them\n        }\n    }\n\n    public void ActivateBigFoot(float duration)\n    {\n        StartCoroutine(BigFootRoutine(duration));\n    }\n\n    private IEnumerator BigFootRoutine(float duration)\n    {\n        isBigFootActive = true;\n        yield return new WaitForSeconds(duration);\n        isBigFootActive = false;\n    }\n}",
    "BugControl.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BugControl : MonoBehaviour {\n\n    public float minSpeed = 1f;\n    public float maxSpeed = 3f;\n    public GameObject slowBugPrefab;\n    public GameObject fastBugPrefab;\n    public GameObject splatEffectPrefab;\n\n    private float speed;\n\n    void Start()\n    {\n        speed = Random.Range(0f, 1f) < 0.7f ? minSpeed : maxSpeed;\n        GameObject bug = speed == minSpeed ? slowBugPrefab : fastBugPrefab;\n        Instantiate(bug, transform.position, Quaternion.identity);\n    }\n\n    void Update()\n    {\n        transform.Translate(Vector2.left * speed * Time.deltaTime);\n        if (transform.position.x < -10f) // Assuming -10 is out of screen\n        {\n            Destroy(gameObject);\n        }\n    }\n\n    void OnTriggerEnter2D(Collider2D other)\n    {\n        if (other.CompareTag(\"Foot\"))\n        {\n            Squash();\n        }\n    }\n\n    void Squash()\n    {\n        Instantiate(splatEffectPrefab, transform.position, Quaternion.identity);\n        GameControl.instance.BugSquashed(speed == minSpeed ? 1 : 2);\n        Destroy(gameObject);\n    }\n}",
    "ScoreManager.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class ScoreManager : MonoBehaviour {\n\n    public Text scoreText;\n    private int score = 0;\n\n    void Start()\n    {\n        UpdateScoreText();\n    }\n\n    public void AddScore(int points)\n    {\n        score += points;\n        UpdateScoreText();\n    }\n\n    private void UpdateScoreText()\n    {\n        scoreText.text = \"Score: \" + score.ToString();\n    }\n}",
    "SplatEffect.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SplatEffect : MonoBehaviour {\n\n    public float duration = 0.5f; // Duration for which the splat effect is visible\n\n    void Start()\n    {\n        Destroy(gameObject, duration);\n    }\n}",
    "BuffManager.cs": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BuffManager : MonoBehaviour {\n\n    public FootControl footControl;\n    public float bigFootDuration = 10f;\n    private int consecutiveSquashes = 0;\n    private const int squashesForBuff = 10;\n\n    public void BugSquashed()\n    {\n        consecutiveSquashes++;\n        if (consecutiveSquashes >= squashesForBuff)\n        {\n            ActivateBigFootBuff();\n            consecutiveSquashes = 0;\n        }\n    }\n\n    private void ActivateBigFootBuff()\n    {\n        footControl.ActivateBigFoot(bigFootDuration);\n    }\n}"
}